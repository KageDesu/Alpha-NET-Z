#╒═════════════════════════════════════════════════════════════════════════╛
# ■ MV PATCH.coffee
#╒═════════════════════════════════════════════════════════════════════════╛
#---------------------------------------------------------------------------
do ->

    # * ОБЩИЕ МЕТОДЫ СОВМЕСТИМОСТИ (не относяться напрямую к Alpha NET Z)

    #TODO: Может вынести в ACore ?

    return unless KDCore.isMV()


    #╒═════════════════════════════════════════════════════════════════════════╛
    # ■ Scene_Base.coffee
    #╒═════════════════════════════════════════════════════════════════════════╛
    #---------------------------------------------------------------------------
    do ->
    
        #@[DEFINES]
        _ = Scene_Base::
    
        # * Данного метода нет в MV
        _.calcWindowHeight = (numLines, selectable) ->
            if selectable is true
                return Window_Selectable::fittingHeight(numLines)
            else
                return Window_Base::fittingHeight(numLines)
        
        return
    # ■ END Scene_Base.coffee
    #---------------------------------------------------------------------------
    
    #╒═════════════════════════════════════════════════════════════════════════╛
    # ■ Window_Selectable.coffee
    #╒═════════════════════════════════════════════════════════════════════════╛
    #---------------------------------------------------------------------------
    do ->
    
        #@[DEFINES]
        _ = Window_Selectable::
    
        # * Данного метода нет в MV
        _.itemLineRect = (index) -> @itemRect(index)
        
        return
    # ■ END Window_Selectable.coffee
    #---------------------------------------------------------------------------

    return
# ■ END MV PATCH.coffee
#---------------------------------------------------------------------------


